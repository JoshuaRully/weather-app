{"version":3,"sources":["components/Day.jsx","components/DayList.jsx","components/SearchBar.jsx","hooks/Debounce.jsx","components/Location.jsx","App.jsx","index.jsx"],"names":["Day","props","condition","weather","icon","date","DateTime","fromSQL","dt_txt","toFormat","className","id","src","alt","Math","ceil","main","temp","DayList","list","SearchBar","useState","value","setValue","term","input","ms","debounced","setDebounced","useEffect","timeout","setTimeout","clearTimeout","useDebounce","onSearch","useCallback","onSubmit","event","preventDefault","TextField","spellCheck","placeholder","name","type","style","margin","onChange","target","Location","city","country","App","setCity","setWeather","axios","get","then","res","data","catch","error","console","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAyBeA,MApBf,SAAaC,GACX,IAAMC,EAAY,oCAAqCD,EAAME,QAAQA,QAAQ,GAAGC,KAAM,UAChFC,EAAOC,WAASC,QAAQN,EAAME,QAAQK,QAAQC,SAAS,MAE7D,OACE,sBAAKC,UAAU,eAAf,UACE,6BACGL,IAEH,qBAAKM,GAAG,YAAYC,IAAKV,EAAWW,IAAI,sBACxC,+BACGC,KAAKC,KAAKd,EAAME,QAAQa,KAAKC,KAAO,QADvC,WAGA,6BACGhB,EAAME,QAAQA,QAAQ,GAAGa,WCAnBE,MAhBf,SAAiBjB,GACf,OAAIA,EAAME,QAAQgB,KAEd,0BAAST,UAAU,WAAnB,UACE,cAAC,EAAD,CAAKP,QAASF,EAAME,QAAQgB,KAAK,KACjC,cAAC,EAAD,CAAKhB,QAASF,EAAME,QAAQgB,KAAK,MACjC,cAAC,EAAD,CAAKhB,QAASF,EAAME,QAAQgB,KAAK,MACjC,cAAC,EAAD,CAAKhB,QAASF,EAAME,QAAQgB,KAAK,MACjC,cAAC,EAAD,CAAKhB,QAASF,EAAME,QAAQgB,KAAK,SAI9B,8B,YCVI,SAASC,EAAUnB,GAChC,MAA0BoB,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,ECLO,SAAqBC,EAAOC,GACzC,MAAkCL,mBAAS,IAA3C,mBAAOM,EAAP,KAAkBC,EAAlB,KAOA,OALAC,qBAAU,WACR,IAAMC,EAAUC,YAAW,kBAAMH,EAAaH,KAAQC,GACtD,OAAO,kBAAMM,aAAaF,MACzB,CAACL,EAAOC,IAEJC,EDHMM,CAAYX,EAAO,KAE1BY,EAAWC,sBAAYlC,EAAMiC,SAAU,CAACV,IAM9C,OAJAK,qBAAU,WACRK,EAASV,KACR,CAACA,EAAMU,IAGR,kCACE,sBAAME,SAAU,SAAAC,GAAK,OAAIA,EAAMC,kBAA/B,SACE,cAACC,EAAA,EAAD,CACEC,WAAW,QACXC,YAAY,cACZC,KAAK,SACLC,KAAK,OACLC,MAAO,CAACC,OAAQ,OAChBvB,MAAOA,EACPwB,SAAU,SAAAT,GAAK,OAAId,EAASc,EAAMU,OAAOzB,cEVpC0B,MAbf,SAAkB/C,GAEhB,OAAIA,EAAME,QAAQ8C,KAEd,8DAC+BhD,EAAME,QAAQ8C,KAAKP,KADlD,KAC0DzC,EAAME,QAAQ8C,KAAKC,WAIxE,8BCsBIC,MAzBf,WACE,MAAwB9B,mBAAS,IAAjC,mBAAO4B,EAAP,KAAaG,EAAb,KACA,EAA8B/B,mBAAS,IAAvC,mBAAOlB,EAAP,KAAgBkD,EAAhB,KAWA,OATAxB,qBAAU,WACRyB,IAAMC,IAAN,4DAA+DN,EAA/D,4CACGO,MAAK,SAAAC,GACJJ,EAAWI,EAAIC,SAGhBC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,QAC/B,CAACX,IAGF,sBAAKvC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,yBAGA,cAACU,EAAD,CAAWc,SAAU,SAAAe,GAAI,OAAIG,EAAQH,MACrC,cAAC,EAAD,CAAU9C,QAASA,IACnB,cAAC,EAAD,CAASA,QAASA,QCvBxB2D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d4fdede0.chunk.js","sourcesContent":["import React from 'react'\nimport { DateTime } from 'luxon';\n\nimport './Day.css';\n\nfunction Day(props) {\n  const condition = \"http://openweathermap.org/img/wn/\"+ props.weather.weather[0].icon +\"@2x.png\"\n  const date = DateTime.fromSQL(props.weather.dt_txt).toFormat(\"ff\");\n  \n  return (\n    <div className=\"weather-tile\">\n      <h2>\n        {date}\n      </h2>\n      <img id=\"condition\" src={condition} alt=\"weather condition\"/>\n      <h1>\n        {Math.ceil(props.weather.main.temp - 273.15)}Â°C\n      </h1>\n      <h3>\n        {props.weather.weather[0].main}\n      </h3>\n    </div>\n  )\n}\n\nexport default Day;","import React from 'react';\nimport Day from './Day';\n\nfunction DayList(props) {\n  if (props.weather.list) {\n    return (\n      <section className=\"day-list\">\n        <Day weather={props.weather.list[7]}/>\n        <Day weather={props.weather.list[15]}/>\n        <Day weather={props.weather.list[23]}/>\n        <Day weather={props.weather.list[31]}/>\n        <Day weather={props.weather.list[39]}/>\n      </section>\n      )\n  } else {\n    return <></>\n  }\n} \n\nexport default DayList;\n","import React, { useState, useEffect, useCallback } from \"react\";\n\nimport useDebounce from '../hooks/Debounce';\nimport { TextField } from \"@material-ui/core\";\n\nexport default function SearchBar(props) {\n  const [value, setValue] = useState(\"\");\n  const term = useDebounce(value, 1000);\n\n  const onSearch = useCallback(props.onSearch, [term]);\n\n  useEffect(() => {\n    onSearch(term);\n  }, [term, onSearch]);\n\n  return (\n    <section>\n      <form onSubmit={event => event.preventDefault()}>\n        <TextField\n          spellCheck=\"false\"\n          placeholder=\"Search City\"\n          name=\"search\"\n          type=\"text\"\n          style={{margin: \"2vh\"}}\n          value={value}\n          onChange={event => setValue(event.target.value)}\n        />\n      </form>\n    </section>\n  );\n}","import { useState, useEffect } from \"react\";\n\nexport default function useDebounce(input, ms) {\n  const [debounced, setDebounced] = useState(\"\");\n\n  useEffect(() => {\n    const timeout = setTimeout(() => setDebounced(input), ms);\n    return () => clearTimeout(timeout);\n  }, [input, ms]);\n\n  return debounced;\n}\n","import React from 'react'\n\nfunction Location(props) {\n\n  if (props.weather.city) {\n    return (\n      <h2>\n        Showing 5-day Forecast for: {props.weather.city.name}, {props.weather.city.country}\n      </h2>\n    )\n  } else {\n    return <></>;\n  }\n}\n\nexport default Location;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport './App.css';\nimport DayList from './components/DayList';\nimport SearchBar from './components/SearchBar';\nimport Location from './components/Location';\n\nfunction App() {\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState({});\n\n  useEffect(() => {\n    axios.get(`http://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=7f55beff6e0ebb2222439307be3428b0`)\n      .then(res => {\n        setWeather(res.data);\n        // console.log(res.data);\n      })\n      .catch(error => console.error(error));\n  }, [city]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Weather App\n      </header>\n      <SearchBar onSearch={city => setCity(city)} />\n      <Location weather={weather} />\n      <DayList weather={weather} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}